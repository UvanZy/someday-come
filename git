git log — история коммитов.
git status — измененные файлы (показывает добавлены в коммит или нет).
git add file — добавить файл в коммит.
git add . — добавить все изменённые файлы в коммит.
git commit — m ‘text’ - добавить подпись коммитов.
git commit --amend — изменения сообщение последнего коммита.
git branch — посмотреть ветки.
git branch -v — просмотре веток с последним в ней коммитом.
git branch -d название ветки — удалить ветку. 
git checkout название ветки — переключиться в ветку.
git checkout -b название ветки — создать новую ветку и сразу в неё переключиться.
git push сервер ветка – залить изменения на сервер в указанную ветку.
git push -f  — залить изменения на сервер в режиме force, то есть с возможностью переписать уже имеющиеся коммиты на сервере. Будьте очень аккуратны с этой командой, а лучше минимизируйте её использование, ведь вы будете переписывать серверные файлы.

 git push --set-upstream origin newvetka - правильное добавление в ветку

до этого не забываем коммитить

Перед пушем надо связать локальный и удаленный репозитории. Делается это при помощи команды:
git remote add origin !ссылка!
Далее в инструкции вместо этого параметра мы будем использовать origin, так как чаще всего используют это имя.
Вместо link — ссылка на удаленный репозиторий, она может выглядеть по-разному в зависимости от того используется ssh или https

Слияние
 команда git merge пытается объединить две независимые и несвязанные ветки, у которых нет общего 
предка в истории коммитов. 
Эта ошибка может возникнуть при слиянии двух разных репозиториев или же при попытке объединения двух веток, которые были созданы из разных репозиториев.
Для решения этой проблемы, вы можете добавить опцию --allow-unrelated-histories при выполнении команды git merge:```
git merge master --allow-unrelated-histories```
Это позволит объединить две ветки с разными историями коммитов. Однако, перед тем как выполнить данную команду, убедитесь, что объединение историй безопасно,
иначе может произойти некорректное слияние кода.
 Выберите измененные файлы из ветки `master`, используя команду checkout:
git checkout master -- file1 file2 file3

